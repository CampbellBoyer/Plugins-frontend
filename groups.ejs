<!DOCTYPE html>
<html>
<head>
  <title>Groups</title>
  <%- include('header'); %>
</head>
<body>
  <%- include('top-navigation'); %>
  
  <div class="uk-hidden@m">
    <br><br><br><br><br><br>
  </div>

<div id="app">
  <div class="uk-padding uk-clearfix">
    <h3 class="uk-position-relative uk-margin uk-margin-right uk-float-left norwester">Groups</h3>
    <div class="uk-position-relative uk-float-right"><button class="uk-button button-dk" href="#request-modal" uk-toggle>Request</button></div>

    <div id="request-modal" uk-modal>
      <div class="uk-modal-dialog uk-modal-body fog">
        <button class="uk-modal-close-default" type="button" uk-close></button>
          <h2 class="uk-modal-title">Request a Group</h2>
          <form>
            <div class="uk-margin">
              <span class="profile-label">*Group Name</span>
              <input class="uk-input" type="text" v-model="requestedGroupName">
            </div>
            <div class="uk-margin">
              <span class="profile-label">*Group Description</span>
              <input class="uk-input" type="text" v-model="requestedGroupDescription">
            </div>
            <div class="uk-margin">
              <span class="profile-label">*Reason for Request</span>
              <textarea class="uk-textarea" rows="5" placeholder="Please summarize the purpose of this group." v-model="requestReason"></textarea>
            </div>
          </form>

          <p class="uk-text-left">
            <button class="uk-button button-dk" type="button" v-on:click="requestGroup">Submit</button>
            <button class="uk-button button-lt uk-modal-close" type="button">Cancel</button>
          </p>
      </div>
    </div>
  </div>

  <!-- Member Detail Modal -->
  <div id="modal-group-details" class="uk-modal-full" uk-modal>
    <div class="uk-modal-dialog fog uk-padding" uk-overflow-auto uk-height-viewport>
        <button class="uk-modal-close-full uk-close-large fog" type="button" uk-close></button>
      <h3 class="norwester font-black uk-text-center uk-padding">Member Details</h3>
      <div v-if="selectedGroup != null">
        <div class="uk-container border-charcoal white uk-margin" v-for="user in selectedGroup.users">
          <div class="uk-grid-match uk-margin-remove uk-flex-top uk-padding" uk-grid v-if="user.isPublic">
          <div class="uk-width-1-3@m">
              <h4 class="norwester font-black">{{ user.name }}</h4>
              <img class="uk-border-rounded uk-height-small uk-width-auto" v-bind:src="user.profilePhotoRef ? '/api/photo/' + user.profilePhotoRef : '/profile_photo_placeholder.svg'">
          </div>
          <div class="uk-width-1-3@m">
            <span class="profile-label">Email</span><br>
            <a id="email" href="mailto:leslie_cole@gmail.com">{{ user.email }}</a><br><br>
            <span class="profile-label">Home Phone</span><br>
            <span id="home_phone" class="profile-field">{{ user.home_phone || '--' }}</span><br><br>
            <span class="profile-label">Cell Phone</span><br>
            <span id="mobile_phone" class="profile-field">{{ user.cell_phone || '--' }}</span><br><br>
            <span class="profile-label">Birthday</span><br>
            <span id="birthday" class="profile-field">{{ user.birthday || '--' }}</span>
          </div>
          <div class="uk-width-1-3@m">
            <span class="profile-label">Marital Status</span>
            <span id="marital_status" class="profile-field">{{ user.marital_status || '--' }}</span><br>
            <span class="profile-label">Address</span><br>
            <span>
            <span id="address_line1" class="profile-field">{{ user.address_line_1 }}</span><br>
            <span id="address_line2" class="profile-field">{{ user.address_line_2 }}</span><br>
            <span id="city" class="profile-field">{{ user.city }}</span><span v-if="user.city">, </span><span id="state" class="profile-field">{{ user.state }} </span><span id="zip" class="profile-field">{{ user.zip_code }}</span>
            </span>
          </div>
          </div>
          <div class="uk-container uk-padding border-charcoal white uk-margin" v-else>
            <h4 class="norwester font-black uk-text-center">{{ user.name }}</h4><br><br>
            <h5 class="profile-label uk-text-center uk-margin"> <i class="fa fa-user-secret fa-3x"></i> <br><br>Profile is Private</h5>
          </div>
        </div>

      </div>
      <br><br>
    </div>
  </div>

<!--------------------------->
<!-- Profile Info Section -->
<!--------------------------->

<div class="uk-margin-right uk-margin-left">
  <div class="uk-child-width-1-2@m" uk-grid>
    <div id="leader-groups" class="uk-card uk-card-default">
      <div class="uk-card-header container-top">
        <h4 class="norwester font-white">Groups You Lead</h4>
      </div>
      <table class="uk-table uk-margin-remove group-table">
        <tbody>
          <td class="uk-clearfix" v-if="myLeaderGroups.length == 0">
            <p>
              <i>You are not currently leading any groups.</i>
            </p>
          </td>
          <tr v-for="group in myLeaderGroups">
            <td class="uk-clearfix">
              <a href="#modal-group-details" uk-toggle v-on:click="setSelectedGroup(group)"><h4>{{ group.group_name }}</h4></a>
              <h5 class="font-charcoal uk-position-relative">
                <span class="uk-float-left"><span id="member_count">{{ group.users.length }}</span> Member<span v-if="group.users.length != 1">s</span></span>
                <span class="uk-float-right"><a>Contact Group</a> | <a>Close</a></span>
              </h5>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <div id="participant-groups" class="uk-card uk-card-default">
      <div class="uk-card-header container-top">
        <h4 class="norwester font-white">Groups you Joined</h4>
      </div>
      <table class="uk-table uk-margin-remove group-table">
        <tbody>
          <td class="uk-clearfix" v-if="myParticipantGroups.length == 0">
            <p>
              <i>You are not currently a participant in any group.</i>
            </p>
          </td>
          <tr v-for="group in myParticipantGroups">
            <td class="uk-clearfix">
            <a href="#modal-group-details" uk-toggle v-on:click="setSelectedGroup(group)"><h4>{{ group.group_name %> }}</h4></a>
            <h5 class="font-charcoal uk-position-relative">
              <span class="uk-float-left"><span id="member_count">{{ group.users.length }}</span> Member<span v-if="group.users.length != 1">s</span></span>
              <span class="uk-float-right"><a>Contact Leader</a> | <a v-on:click="leaveGroup(group)">Leave</a></span>
            </h5>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!--------------------------->
<!-- User Setup Section -->
<!--------------------------->
<div id="search-dashboard" class="uk-card uk-card-default uk-margin-large-top uk-margin-right uk-margin-left">
  <div id="groups-overview" class="uk-card-header container-top uk-clearfix">
    <div class="uk-float-right uk-visible@m">
      <select class="uk-select border-charcoal2 uk-inline uk-width-small" v-model.number="pageSize">
          <option><%= defaultPageSize %></option>
          <option>20</option>
          <option>50</option>
      </select>
      <span class="font-white">&nbsp;per page</span>
    </div>
    <div class="uk-grid-small uk-flex-middle" uk-grid>
    <h4 class="norwester font-white">Groups Available<h5 class="font-white" id="group_count">({{ totalGroupCount }})</h5></h4>
    </div>
  </div>
  <div class="charcoal uk-padding-small">
    <form class="uk-width-1-1 uk-padding-small">
      <div class="uk-form-controls uk-inline uk-width-1-3@m uk-margin-right uk-margin-bottom-small">
        <span class="uk-form-icon" uk-icon="icon: search"></span>
        <input class="uk-input border-charcoal2" type="text" placeholder="Search by Group Name" v-model="searchText">
      </div>
      <div class="uk-inline uk-width-1-3@m uk-margin-right uk-margin-bottom-small">
        <select class="uk-select border-charcoal2" v-model="sortMode">
          <option value="alphabetical">Sort Alphabetically (A-Z)</option>
          <option value="reverse">Sort Alphabetically (Z-A)</option>
        </select>
      </div>
      <div class="uk-inline uk-float-right uk-margin-bottom-small">
        <h5 class="font-white"><a class="font-white" v-on:click="redoSearch">Redo Search</a></h5>
      </div>
    </form>
  </div>

<div class="uk-card-body white uk-padding-remove uk-margin-remove uk-width-1-1">
  <table class="uk-table uk-table-large uk-margin-remove uk-width-1-1 uk-overflow-auto">
    <thead class="uk-card-header white">
      <tr>
        <th class="uk-table-shrink border-none uk-width-1-2 ">Group Name</th>
        <th class="uk-table-shrink border-none"># of Members</th>
        <th class="uk-table-shrink border-none">Actions</th>
        <th class="uk-table-shrink border-none"></th>
      </tr>
    </thead>
    <div class="uk-card-body white uk-padding-remove"></div>
    <tbody>
      <tr v-for="group in groups" :key="group.id">
        <td class="table-border border-none">
          <span id="group_name">{{ group.group_name }}</span>
        </td>
        <td class="table-border border-none">
          <span id="member-count">{{ group.users.length }}</span>
        </td>
        <td class="table-border border-none">
          <span class="uk-inline"><a>Contact Leader</a></td> <td class="table-border border-none"> <a v-on:click="joinGroup(group)">Join</a></span>
        </td>
      </tr>
    </tbody>
  </table>
  <div class="uk-padding-small black">
    <ul class="uk-pagination uk-flex-center uk-margin-remove">
      <li><a v-on:click="paginateLeft"><span uk-icon="icon: chevron-left; ratio: 2" class="font-white"></span></a></li>
      <li><div>
        <select class="uk-select border-charcoal2" v-model.number="pageNumber">
          <option v-for="page in Array(pageCount).keys()">{{ page + 1 }}</option>
        </select>
      </div></li>
      <li class="font-white uk-margin-small">of  {{ pageCount }}</li>
      <li><a v-on:click="paginateRight"><span uk-icon="icon: chevron-right; ratio: 2" class="font-white"></span></a></li>
    </ul>
  </div>
</div>
</div>
</div>
</div>
<div class="uk-margin-large"></div>
<%- include('footer'); %>

<script type="text/javascript">
  var app = new Vue({
    el: '#app',
    data: {
      groups: <%- JSON.stringify(groups) || [] %>,
      totalGroupCount: <%= groupCount %>,
      myLeaderGroups: <%- JSON.stringify(leaderGroups) || [] %>,
      myParticipantGroups: <%- JSON.stringify(participantGroups) || [] %>,
      pageNumber: 1,
      pageSize: <%= defaultPageSize %>,
      sortMode: 'alphabetical',
      searchText: '',
      requestedGroupName: '',
      requestedGroupDescription: '',
      requestReason: '',
      selectedGroup: null
    },
    computed: {
      pageCount: function() {
        return Math.ceil(this.totalGroupCount / this.pageSize);
      }
    },
    watch: {
      // if page size changes, display new results from beginning; change if not desired behavior
      pageSize: function(newValue, oldValue) {
        this.pageNumber === 1 ?
          this.refreshResults() :
          this.pageNumber = 1;
      },
      pageNumber: function() {
        this.refreshResults();
      }
    },
    methods: {
      refreshResults: function() {
        var self = this;
        var queryString = '';
        queryString += ('page=' + this.pageNumber);
        queryString += ('&pageSize=' + this.pageSize);
        queryString += ('&sortAlphabetical=' + (this.sortMode === 'alphabetical'));
        if (this.searchText) queryString += ('&groupName=' + this.searchText);

        axios.get('/api/groups-paginated?' + queryString)
          .then(function(data) {
            if (data.data) {
              self.groups = data.data['groups'];
              self.totalGroupCount = data.data['count'];
            }
          })
          .catch(function(err) {
            alert('There was an issue updating your search results. Please try again');
          });
      },
      requestGroup: function() {
        var validationMessage = '';
        if (!this.requestedGroupName) {
          validationMessage += 'You must specify a group name for your requested group.\n';
        }
        if (!this.requestedGroupDescription) {
          validationMessage += 'You must specify a description for your requested group.\n';
        }
        if (!this.requestReason) {
          validationMessage += 'You must specify a reason for requesting the group.'
        }
        if (validationMessage) {
          alert(validationMessage);
          return;
        }

        var groupRequest = {
          requested_group_name: this.requestedGroupName,
          requested_group_description: this.requestedGroupDescription,
          request_reason: this.requestReason
        };

        var self = this;
        axios.post('/api/group-request', groupRequest)
          .then(function(data) {
            self.requestedGroupName = '';
            self.requestedGroupDescription = '';
            self.requestReason = '';

            UIkit.modal('#request-modal').hide();
          })
          .catch(function(err) {
            alert('There was an issue submitting your group request. Please try again or contact an administrator');
          });
      },
      setSelectedGroup: function(group) {
        this.selectedGroup = group;
      },
      joinGroup: function(group) {
        axios.post('/api/join-group', {
          group_id: group.id
        })
          .then(function(data) {
            alert('Successfully joined ' + group.group_name + '.');
          })
          .catch(function(err) {
            alert('There was an error processing your request. Please try again or contact an administrator');
          });
      },
      leaveGroup: function(group) {
        axios.post('/api/leave-group', {
          group_id: group.id
        }).then(function(data) {
          alert('Successfully left ' + group.group_name + '.');
        })
        .catch(function(err) {
          alert('There was an error processing your request. Please try again or contact an administrator');
        });
      },
      paginateLeft: function() {
        if (this.pageNumber > 1) this.pageNumber--;
      },
      paginateRight: function() {
        if (this.pageNumber < this.pageCount) this.pageNumber++;
      },
      redoSearch: function() {
        this.refreshResults();
      }
    }
  });

</script>
</body>
</html>
