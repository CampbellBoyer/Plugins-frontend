<!DOCTYPE html>
<html>
<head>
  <title>Admin Database</title>
  <%- include('header'); %>
</head>
<body>
  <%- include('top-navigation'); %>

  <!-- Admin Tabs -->
  <div class="link-tab uk-margin-left uk-padding-small uk-margin-right">
    <h4>
      <a href="/admin-database" class="uk-padding-small">Alumni</a>&nbsp;&nbsp;&nbsp;
      <a href="/admin-group" class="uk-padding-small">Groups</a>&nbsp;&nbsp;&nbsp;
      <a href="/admin-event" class="uk-padding-small">Events</a>&nbsp;&nbsp;&nbsp;
      <a href="/admin-news" class="uk-padding-small">News</a>&nbsp;&nbsp;&nbsp;
      <a href="/admin-security" class="uk-padding-small">Security</a>&nbsp;&nbsp;&nbsp;
      <a href="/admin-settings" class="uk-padding-small">Settings</a>
      <a href="/admin-membership" class="tab-active uk-padding-small">Memberships</a>
    </h4>
    <hr class="border-slate"></hr>
  </div>
  
  <div id="app">
    <div class="uk-margin-small-top uk-margin-left uk-margin-right uk-clearfix">
      <h4 class="uk-position-relative uk-margin-right uk-float-left norwester">Memberships</h4>
      <!-- <div class="uk-position-relative uk-float-right"><button class="uk-button button-lt" href="#add_group" uk-toggle>Add a Group</button></div> -->
    </div>

    <div class="uk-card uk-card-default uk-margin-top uk-margin-right uk-margin-left">
      <div class="uk-card-header container-top uk-clearfix">
        <p class="font-white float-left uk-inline"> Showing <span id="table_start">{{ (pageNumber * pageSize) - (pageSize - 1) }}</span> - <span id="table_end">{{ Math.min( totalMembershipCount, pageNumber * pageSize) }}</span> of <span id="table_total">{{ totalMembershipCount }}</span></p>
        <div class="uk-float-right uk-visible@m">
          <select class="uk-select border-charcoal2 uk-inline uk-width-small" v-model.number="pageSize">
            <option><%= defaultPageSize %></option>
            <option>50</option>
            <option>100</option>
          </select>
          <span class="font-white">&nbsp;per page</span>
        </div>
      </div>
      <div class="charcoal uk-padding-small">
        <form class="uk-width-1-1 uk-padding-small">
          <div class="uk-form-controls uk-inline uk-width-1-3@m uk-margin-right uk-margin-bottom-small">
            <span class="uk-form-icon" uk-icon="icon: search"></span>
              <input class="uk-input border-charcoal2" type="text" placeholder="Search by User" v-model="searchName">
          </div>
          <div class="uk-inline uk-width-1-3@m uk-margin-right uk-margin-bottom-small">
            <select class="uk-select border-charcoal2" v-model="sortAlphabetical">
              <option value="true">Sort Alphabetically (A-Z)</option>
              <option value="false">Sort Alphabetically (Z-A)</option>
            </select>
          </div>
          <div class="uk-inline uk-float-right uk-margin-bottom-small">
            <h5 class="font-white"><a class="font-white" v-on:click="clearFilters">Clear Filters</a> | <a class="font-white" v-on:click="redoSearch">Search</a></h5>
          </div>
        </form>
      </div>
      <div class="uk-card-body white uk-padding-remove uk-margin-remove uk-width-1-1">
        <table class="uk-table uk-table-large uk-margin-remove uk-width-1-1 uk-overflow-auto">
          <thead class="uk-card-header white">
            <tr>
              <th class="uk-table-shrink border-none uk-width-1-2">User Name</th>
              <th class="uk-table-shrink border-none uk-width-1-2">Membership Type</th>
              <th class="uk-table-shrink border-none uk-width-1-2">Joining Date</th>
              <th class="uk-table-shrink border-none uk-width-1-2">Edit</th>
            </tr>
          </thead>
          <div class="uk-card-body white uk-padding-remove">
            <tbody>
              <tr v-for="user in users">
                <td class="table-border border-none">
                  <p>{{ [user.first_name, user.middle_name, user.last_name].filter(function(e) { return !!e; }).join(' ') || '--' }}</p>
                </td>
                <td class="table-border border-none">
                  <p>{{ user.membership.membershipType.name }}</p>
                </td>
                <td class="table-border border-none">
                  {{ moment(user.membership.createdAt).format('MM/DD/YYYY') }}
                </td>
                <td class="table-border border-none uk-text-right">
                  <a href="#edit-membership-modal" class="uk-icon-link" uk-icon="pencil" uk-tooltip="title: EDIT" uk-toggle v-on:click="setSelectedUser(user)"></a>&nbsp;
                </td>
              </tr>
            </tbody>
          </div>
        </table>
        <div class="uk-padding-small black">
          <ul class="uk-pagination uk-flex-center uk-margin-remove">
            <li><a v-on:click="paginateLeft"><span uk-icon="icon: chevron-left; ratio: 2" class="font-white"></span></a></li>
            <li>
              <div>
                <select class="uk-select border-charcoal2" v-model.number="pageNumber">
                  <option v-for="page in Array(pageCount).keys()">{{ page + 1 }}</option>
                </select>
              </div>
            </li>
            <li class="font-white uk-margin-small">of {{ pageCount }}</li>
            <li><a v-on:click="paginateRight"><span uk-icon="icon: chevron-right; ratio: 2" class="font-white"></span></a></li>
          </ul>
        </div>
      </div>
    </div>

    <div id="edit-membership-modal" class="uk-modal" uk-modal>
      <div class="uk-modal-dialog">
        <button class="uk-modal-close-default" type="button" uk-close></button>
        <div class="uk-modal-header fog">
          <h3 class="uk-modal-title norwester">Edit Membership</h3>
        </div>

        <div class="uk-modal-body fog uk-padding">
          <label class="uk-form-label" for="form-stacked-text">Membership Type for {{ selectedUser.first_name || '--' }}:</label><br>
          <select class="uk-select border-charcoal2 uk-width-1-1" v-model="selectedUser.membership.membership_type">
            <option v-for="membershipType in membershipTypes" v-bind:value="membershipType.id" v-bind:selected="membershipType.id === selectedUser.membership_type">{{ membershipType.name }}</option>
          </select>
        </div>

        <div class="uk-modal-footer fog uk-text-left">
          <button class="uk-button button-lt" type="button" v-on:click="saveChanges">Save</button>
        </div>
      </div>
    </div>
  </div>

  <div class="uk-margin-large"></div>  

  <%- include('footer'); %>  

  <script type="text/javascript">
    var app = new Vue({
      el: '#app',
      data: {
        users: <%- JSON.stringify(userList) %>,
        totalMembershipCount: <%= totalCount %>,
        membershipTypes: <%- JSON.stringify(membershipTypes) %>,
        pageNumber: 1,
        pageSize: <%= defaultPageSize %>,
        searchName: '',
        sortAlphabetical: true,
        selectedUser: <%- JSON.stringify(userList[0]) || JSON.stringify(null) %>
      },
      computed: {
        pageCount: function() {
          return Math.ceil(this.totalMembershipCount / this.pageSize);
        }
      },
      watch: {
        pageNumber: function(newVal, oldVal) {
          this.refreshResults();
        },
        pageSize: function() {
          this.pageNumber == 1 ? this.refreshResults() : this.pageNumber = 1;
        }
      },
      methods: {
        refreshResults: function() {
          var self = this;
          var queryString = '/api/users-paginated?';
          queryString += 'page=' + this.pageNumber;
          queryString += '&pageSize=' + this.pageSize;
          queryString += '&searchName=' + this.searchName;
          queryString += '&sortAlphabetical=' + this.sortAlphabetical;
          queryString += '&includeRelations=true';
          
          axios.get(queryString)
            .then(function(data) {
              if (data.data) {
                self.users = data.data.users;
                self.totalMembershipCount = data.data.count;
              }
            })
            .catch(function(err) {
              alert('There was an issue updating the results. Please try again');
            });
        },
        paginateLeft: function() {
          if (this.pageNumber > 1) this.pageNumber--;
        },
        paginateRight: function() {
          if (this.pageNumber < this.pageCount) this.pageNumber++;
        },
        clearFilters: function() {
          this.searchName = '';
          this.sortAlphabetical = true;
        },
        redoSearch: function() {
          this.pageNumber == 1 ?
            this.refreshResults() :
            this.pageNumber = 1;
        },
        setSelectedUser: function(user) {
          this.selectedUser = Object.assign({}, user);
        },
        saveChanges: function() {
          axios.post('/api/admin-change-membership', {
            user_id: this.selectedUser.id,
            membership_type: this.selectedUser.membership.membership_type
          })
            .then(function(data) {
              alert('Successfully updated membership.');
              UIkit.modal('#edit-membership-modal').hide();
            })
            .catch(function(err) {
              alert('There was an error processing your request. Please refresh the page and try again');
            });
        }
      }
    });
  </script>
</body>
</html>
