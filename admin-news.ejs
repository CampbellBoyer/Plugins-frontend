<!DOCTYPE html>
<html>
<head>
  <title>Admin News</title>
  <%- include('header'); %>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script
  src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
  integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
  crossorigin="anonymous"></script>
  <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/timepicker@1.12.0/jquery.timepicker.min.css">
  <script src="//cdn.jsdelivr.net/npm/timepicker@1.12.0/jquery.timepicker.min.js"></script>
</head>
<body>
  <%- include('top-navigation'); %>
  
  <div id="app">  
    <!-- Admin Tabs -->
    <div class="link-tab uk-margin-left uk-padding-small uk-margin-right">
      <h4>
        <a href="/admin-database" class="uk-padding-small">Alumni</a>&nbsp;&nbsp;&nbsp;
        <a href="/admin-group" class="uk-padding-small">Groups</a>&nbsp;&nbsp;&nbsp;
        <a href="/admin-event" class="uk-padding-small">Events</a>&nbsp;&nbsp;&nbsp;
        <a href="/admin-news" class="tab-active uk-padding-small">News</a>&nbsp;&nbsp;&nbsp;
        <a href="/admin-security" class="uk-padding-small">Security</a>&nbsp;&nbsp;&nbsp;
        <a href="/admin-settings" class="uk-padding-small">Settings</a>
        <a href="/admin-membership" class="uk-padding-small">Memberships</a>
      </h4>
      <hr class="border-slate"></hr>
    </div>

    <!-- Success Alert  -->
    <div class="uk-margin uk-margin-right uk-margin-left uk-hidden">
      <div class="uk-alert-success uk-width-1-1" uk-alert>
        <button class="uk-alert-close" type="button" uk-close></button>
        <h5>Your record was deleted successfully <span uk-icon="happy"></span></h5>
      </div>
    </div>
    <!-- End Alert -->

    <div class="uk-margin-medium-bottom uk-margin-left uk-margin-right uk-clearfix">
      <div class="uk-position-relative uk-float-right"><a class="uk-button uk-button-large button-lt" href="#modal-group-1" uk-toggle>Create</a></div>
    </div>

    <div class="uk-card uk-card-default uk-margin-small-top uk-margin-right uk-margin-left">
      <div class="uk-card-header container-top uk-clearfix">
        <div class="uk-grid-small uk-flex-middle uk-float-left" uk-grid>
          <h4 class="norwester font-white"><i class="fa fa-filter"></i> &nbsp; Archives</h4>
        </div>
        <div class="uk-inline uk-float-right uk-margin-small">
          <h5 class="font-white tight"><a class="font-white" v-on:click="clearFilters">Clear Search</a> &nbsp;|&nbsp; <a class="font-white" v-on:click="exportData">Export</a></h5>
        </div>
      </div>
      <div class="uk-card-body white uk-margin-remove">
        <form class="uk-form-stacked">
          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">Date Created</label>
            <div class="uk-inline">
              <span class="uk-form-icon uk-form-icon-flip" uk-icon="icon: calendar"></span>
              <input class="uk-input border-charcoal2" type="date" placeholder="mm/dd/yyyy" v-model="searchDateCreatedStart">
            </div>
          </div>
          <span class="uk-inline">&nbsp; _ &nbsp;</span>
          <div class="uk-inline uk-margin-bottom uk-margin-right uk-width-1-6@m">
            <label class="uk-form-label"> &nbsp; </label>
            <div class="uk-inline">
              <span class="uk-form-icon uk-form-icon-flip" uk-icon="icon: calendar"></span>
              <input class="uk-input border-charcoal2" type="date" placeholder="mm/dd/yyyy" v-model="searchDateCreatedEnd">
            </div>
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">Date Sent</label>
            <div class="uk-inline">
              <span class="uk-form-icon uk-form-icon-flip" uk-icon="icon: calendar"></span>
              <input class="uk-input border-charcoal2" type="date" placeholder="mm/dd/yyyy" v-model="searchDateSentStart">
            </div>
          </div>
          <span class="uk-inline">&nbsp; _ &nbsp;</span>
          <div class="uk-inline uk-margin-bottom uk-margin-right uk-width-1-6@m">
            <label class="uk-form-label"> &nbsp; </label>
            <div class="uk-inline">
              <span class="uk-form-icon uk-form-icon-flip" uk-icon="icon: calendar"></span>
              <input class="uk-input border-charcoal2" type="date" placeholder="mm/dd/yyyy" v-model="searchDateSentEnd">
            </div>
          </div>

          <div class="uk-inline uk-margin-bottom uk-margin-right uk-width-1-3@m">
            <label class="uk-form-label">Subject</label>
            <input class="uk-input border-charcoal2" type="text" v-model="searchSubject">
          </div>

          <div class="uk-inline uk-margin-bottom uk-margin-right uk-width-1-5@m">
            <label class="uk-form-label">Type</label>
            <select class="uk-select border-charcoal2" v-model="searchType">
              <option value="" default>All</option>
              <option>Announcement</option>
              <option>Newsletter</option>
              <option>Event</option>
              <option>Email</option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom uk-margin-right uk-width-1-5@m">
            <label class="uk-form-label">Status</label>
            <select class="uk-select border-charcoal2" v-model="searchStatus">
              <option value="" default>All</option>
              <option>Draft</option>
              <option>Scheduled</option>
              <option>Sent</option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom uk-margin-right uk-width-1-6@m">
            <label class="uk-form-label"> &nbsp; </label>
            <button class="uk-button button-lt" type="button" v-on:click="applyFilters">Search</button>
          </div>
        </form>
      </div>
    </div>

    <div class="uk-margin-large-top uk-margin-left uk-margin-right uk-clearfix">
      <h4 class="uk-position-relative uk-margin-right uk-float-left norwester">Results</h4>
    </div>

    <div class="uk-card uk-card-default uk-margin-right uk-margin-left">
      <div class="uk-card-header container-top uk-clearfix">
        <p class="font-white float-left uk-inline"> Showing <span id="table_start">{{ (pageNumber * pageSize) - (pageSize - 1) }}</span> - <span id="table_end">{{ Math.min( totalNewsCount, pageNumber * pageSize) }}</span> of <span id="table_total">{{ totalNewsCount }}</span></p>

        <div class="uk-float-right uk-visible@m">
          <select class="uk-select border-charcoal2 uk-inline uk-width-small" v-model.number="pageSize">
            <option><%= defaultPageSize %></option>
            <option>50</option>
            <option>100</option>
          </select>
          <span class="font-white">&nbsp;per page</span>
        </div>
      </div>
      <div class="uk-overflow-auto uk-height-xxlarge">
        <table class="uk-table uk-table-small uk-table-middle uk-margin-remove">
          <thead class="uk-card-header charcoal">
            <tr>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Created</th>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Sent</th>
              <th class="font-white border-none">Subject</th>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Type</th>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Status</th>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Opens</th>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Clicks</th>
              <th class="uk-table-shrink uk-text-nowrap font-white border-none">Bounces</th>
              <th class="font-white border-none"></th>
            </tr>
          </thead>

          <div class="uk-card-body white uk-padding-remove">
            <tbody>
              <tr v-for="item in news">
                <td class="table-border border-none font-small">
                  {{ moment(item.createdAt).format('MM-DD-YYYY') }}
                </td>

                <td class="table-border border-none font-small">
                {{ moment(item.publish_date).isValid() ? moment(item.publish_date).format('MM-DD-YYYY') : '--' }}
                </td>

                <td class="table-border border-none font-small">
                <span>{{ item.headline || '--' }}</span>
                </td>

                <td class="table-border border-none font-small">
                  <p>{{ item.item_type }}</p>
                </td>

                <td class="table-border border-none font-small">
                  <p>{{ item.status }}</p>
                </td>

                <td class="table-border border-none font-small uk-text-center ">
                  <p id="opens">{{ item.view_count }}</p>
                </td>

                <td class="table-border border-none font-small uk-text-center ">
                  <p id="clicks">{{ item.click_count }}</p>
                </td>

                <td class="table-border border-none font-small uk-text-center ">
                  <p id="bounces">{{ item.bounce_count }}</p>
                </td>

                <td class="uk-text-right">
                  <a href="" class="uk-icon-link" uk-icon="pencil" uk-tooltip="title: EDIT"></a>&nbsp;
                  <a href="" class="uk-icon-link" uk-icon="copy" uk-tooltip="title: COPY"></a>&nbsp;
                  <a href="" class="uk-icon-link" uk-icon="image" uk-tooltip="title: VIEW"></a>
                </td>
              </tr>
                    
            </tbody>
          </div>
        </table>
        <div class="uk-padding-small black">
          <ul class="uk-pagination uk-flex-center uk-margin-remove">
            <li><a v-on:click="paginateLeft"><span uk-icon="icon: chevron-left; ratio: 2" class="font-white"></span></a></li>
            <li>
              <div>
                <select class="uk-select border-charcoal2" v-model.number="pageNumber">
                  <option v-for="key in Array(pageCount).keys()">{{ key + 1 }}</option>
                </select>
              </div>
            </li>
            <li class="font-white uk-margin-small">of {{ pageCount }}</li>
            <li><a v-on:click="paginateRight"><span uk-icon="icon: chevron-right; ratio: 2" class="font-white"></span></a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
  <div class="uk-margin-large"></div>

  <div id="event-wizard">

  <!-- STEP 2 -->
  <div id="modal-group-2" class="uk-modal-full" uk-modal>
    <div class="uk-modal-dialog">
      <button class="uk-modal-close-default" type="button" uk-close></button>
      <div class="uk-modal-header">
        <h3 class="norwester uk-margin-top uk-text-center">News Wizard </h3>
        <div class="uk-grid" uk-grid>
          <div class="uk-width-1-4"></div>
          <div class="uk-width-1-2">
            <div class="uk-grid-small" uk-grid>
              <div class="uk-width-expand" uk-leader><span class="uk-label uk-border-circle font-white gold ">1</span></div>
              <div class="uk-width-expand" uk-leader><span class="uk-label uk-border-circle font-white gold">2</span></div>
              <div><span class="uk-label uk-border-circle fog font-hint">3</span></div>
            </div>
          </div>
          <div class="uk-width-1-4"></div>
        </div>
      </div>

      <div class="uk-modal-body" uk-overflow-auto>
        <h4>2: Select Recipients</h4>

        <div class="uk-card uk-card-default uk-margin-small-top uk-margin-right uk-margin-left">
          <div class="uk-card-header container-top uk-clearfix">
            <div class="uk-grid-small uk-flex-middle uk-float-left" uk-grid>
              <h4 class="norwester font-white"><i class="fa fa-filter"></i> &nbsp; Choose Fields</h4>
            </div>
            <div class="uk-inline uk-float-right uk-margin-small">
              <h5 class="font-white tight"><a class="font-white" v-on:click="userClearFilters">Clear Filters</a></h5>
            </div>
          </div>
          <div class="uk-card-body white uk-margin-remove">
          <form class="uk-form-stacked">
          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label"> Name</label>
            <input class="uk-input border-charcoal2" type="text" v-model="userSearchName">
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-small">
            <label class="uk-form-label">Grad Year</label>
            <select class="uk-select border-charcoal2" v-model="userSearchGradYear">
              <option value="" default> All </option>
              <option>  2019  </option>
              <option>  2018  </option>
              <option>  2017  </option>
              <option>  2016  </option>
              <option>  2015  </option>
              <option>  2014  </option>
              <option>  2013  </option>
              <option>  2012  </option>
              <option>  2011  </option>
              <option>  2010  </option>
              <option>  2009  </option>
              <option>  2008  </option>
              <option>  2007  </option>
              <option>  2006  </option>
              <option>  2005  </option>
              <option>  2004  </option>
              <option>  2003  </option>
              <option>  2002  </option>
              <option>  2001  </option>
              <option>  2000  </option>
              <option>  1999  </option>
              <option>  1998  </option>
              <option>  1997  </option>
              <option>  1996  </option>
              <option>  1995  </option>
              <option>  1994  </option>
              <option>  1993  </option>
              <option>  1992  </option>
              <option>  1991  </option>
              <option>  1990  </option>
              <option>  1989  </option>
              <option>  1988  </option>
              <option>  1987  </option>
              <option>  1986  </option>
              <option>  1985  </option>
              <option>  1984  </option>
              <option>  1983  </option>
              <option>  1982  </option>
              <option>  1981  </option>
              <option>  1980  </option>
              <option>  1979  </option>
              <option>  1978  </option>
              <option>  1977  </option>
              <option>  1976  </option>
              <option>  1975  </option>
              <option>  1974  </option>
              <option>  1973  </option>
              <option>  1972  </option>
              <option>  1971  </option>
              <option>  1970  </option>
              <option>  1969  </option>
              <option>  1968  </option>
              <option>  1967  </option>
              <option>  1966  </option>
              <option>  1965  </option>
              <option>  1964  </option>
              <option>  1963  </option>
              <option>  1962  </option>
              <option>  1961  </option>
              <option>  1960  </option>
              <option>  1959  </option>
              <option>  1958  </option>
              <option>  1957  </option>
              <option>  1956  </option>
              <option>  1955  </option>
              <option>  1954  </option>
              <option>  1953  </option>
              <option>  1952  </option>
              <option>  1951  </option>
              <option>  1950  </option>
              <option>  1949  </option>
              <option>  1948  </option>
              <option>  1947  </option>
              <option>  1946  </option>
              <option>  1945  </option>
              <option>  1944  </option>
              <option>  1943  </option>
              <option>  1942  </option>
              <option>  1941  </option>
              <option>  1940  </option>
              <option>  1939  </option>
              <option>  1938  </option>
              <option>  1937  </option>
              <option>  1936  </option>
              <option>  1935  </option>
              <option>  1934  </option>
              <option>  1933  </option>
              <option>  1932  </option>
              <option>  1931  </option>
              <option>  1930  </option>
              <option>  1929  </option>
              <option>  1928  </option>
              <option>  1927  </option>
              <option>  1926  </option>
              <option>  1925  </option>
              <option>  1924  </option>
              <option>  1923  </option>
              <option>  1922  </option>
              <option>  1921  </option>
              <option>  1920  </option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">Email Address</label>
            <input class="uk-input border-charcoal2" type="text" v-model="userSearchEmailAddress">
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">Phone Number</label>
            <input class="uk-input border-charcoal2" type="text" v-model="userSearchPhoneNumber">
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">Membership</label>
            <select class="uk-select border-charcoal2" v-model="userSearchMembership">
              <option value="" default> All </option>
              <option value="free">Free</option>
              <option value="annual">Annual</option>
              <option value="lifetime">Lifetime</option>
              <option value="lifetime_50_plus">Lifetime > 50 </option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">Roles</label>
            <select class="uk-select border-charcoal2" v-model="userSearchRoles">
              <option value="" default>All</option>
              <option v-for="role in userRoleOptions" v-bind:value="role.id">{{ role.name }}</option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-medium">
            <label class="uk-form-label">Address</label>
            <input class="uk-input border-charcoal2" type="text" v-model="userSearchAddress">
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-1-6@m">
            <label class="uk-form-label">City</label>
            <input class="uk-input border-charcoal2" type="text" v-model="userSearchCity">
          </div>

          <div class="uk-inline uk-margin-bottom">
            <label class="uk-form-label">State</label>
            <select class="uk-select border-charcoal2" v-model="userSearchState">
              <option value="" default>All</option>
              <option value="AL">AL</option>
              <option value="AK">AK</option>
              <option value="AZ">AZ</option>
              <option value="AR">AR</option>
              <option value="CA">CA</option>
              <option value="CO">CO</option>
              <option value="CT">CT</option>
              <option value="DE">DE</option>
              <option value="DC">DC</option>
              <option value="FL">FL</option>
              <option value="GA">GA</option>
              <option value="HI">HI</option>
              <option value="ID">ID</option>
              <option value="IL">IL</option>
              <option value="IN">IN</option>
              <option value="IA">IA</option>
              <option value="KS">KS</option>
              <option value="KY">KY</option>
              <option value="LA">LA</option>
              <option value="ME">ME</option>
              <option value="MD">MD</option>
              <option value="MA">MA</option>
              <option value="MI">MI</option>
              <option value="MN">MN</option>
              <option value="MS">MS</option>
              <option value="MO">MO</option>
              <option value="MT">MT</option>
              <option value="NE">NE</option>
              <option value="NV">NV</option>
              <option value="NH">NH</option>
              <option value="NJ">NJ</option>
              <option value="NM">NM</option>
              <option value="NY">NY</option>
              <option value="NC">NC</option>
              <option value="ND">ND</option>
              <option value="OH">OH</option>
              <option value="OK">OK</option>
              <option value="OR">OR</option>
              <option value="PA">PA</option>
              <option value="RI">RI</option>
              <option value="SC">SC</option>
              <option value="SD">SD</option>
              <option value="TN">TN</option>
              <option value="TX">TX</option>
              <option value="UT">UT</option>
              <option value="VT">VT</option>
              <option value="VA">VA</option>
              <option value="WA">WA</option>
              <option value="WV">WV</option>
              <option value="WI">WI</option>
              <option value="WY">WY</option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom uk-width-small">
            <label class="uk-form-label">ZIP Code</label>
            <input class="uk-input border-charcoal2" type="text" v-model="userSearchZipCode">
          </div>

          <div class="uk-inline uk-margin-bottom">
            <label class="uk-form-label">Mortality</label>
            <select class="uk-select border-charcoal2" v-model="userSearchMortalityStatus">
              <option value="" default>All</option>
              <option value="alive">Alive</option>
              <option value="deceased">Deceased</option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom">
            <label class="uk-form-label">Hall of Fame</label>
            <select class="uk-select border-charcoal2" v-model="userSearchHOFStatus">
              <option value="" default>All</option>
              <option value="winner">Winner</option>
              <option value="non-winner">Non-Winner</option>
            </select>
          </div>

          <div class="uk-inline uk-margin-bottom">
            <label class="uk-form-label">Groups</label>
            <select class="uk-select border-charcoal2" v-model="userSearchGroups">
              <option value="" default>All</option>
              <option v-for="group in userGroupOptions" v-bind:value="group.id">{{ group.group_name }}</option>
            </select>
          </div>

          <div class="uk-inline uk-float-right">
            <button class="uk-button button-lt" v-on:click="redoSearch" type="button">Search</button>
          </div>
        </form>
        </div>
        </div>

          <div class="uk-card uk-card-default uk-margin-large uk-margin-right uk-margin-left">
            <div class="uk-card-header container-top uk-clearfix">
              <p class="font-white float-left uk-inline"> Showing <span id="table_start">{{ (userPageNumber * userPageSize) - (userPageSize - 1) }}</span> - <span id="table_end">{{ Math.min( totalUserCount, userPageNumber * userPageSize) }}</span> of <span id="table_total">{{ totalUserCount }}</span></p>

              <div class="uk-float-right uk-visible@m">
                <select class="uk-select border-charcoal2 uk-inline uk-width-small" v-model.number="userPageSize">
                  <option><%= defaultPageSize %></option>
                  <option>50</option>
                  <option>100</option>
                </select>
                <span class="font-white">&nbsp;&nbsp; per page</span>
              </div>
            </div>
            <div class="uk-overflow-auto uk-height-xxlarge">
              <table class="uk-table uk-table-small uk-margin-remove">
                <thead class="uk-card-header charcoal">
                  <tr>
                    <th class="uk-table-shrink uk-text-nowrap font-white border-none"><input class="uk-checkbox" type="checkbox" uk-tooltip="title: Select All" v-on:click="selectAll">&nbsp;&nbsp;<span>select</span></th>
                    <th class="uk-text-nowrap font-white border-none">Name</th>
                    <th class="uk-table-shrink uk-text-nowrap font-white border-none">Grad Year</th>
                    <th class="uk-table-shrink uk-text-nowrap font-white border-none">Membership Type</th>
                    <th class="font-white border-none">Roles</th>
                  </tr>
                </thead>

                <div class="uk-card-body white uk-padding-remove"></div>

                <tbody>
                  <tr v-for="user in users">
                    <td><input v-bind:id="'user-' + user.id" class="uk-checkbox" type="checkbox" v-on:click="updateRecipientList(user)"></td>
                    <td><span id="alum_name">{{ [user.first_name, user.middle_name, user.last_name].filter(function(e) { return !!e; }).join(' ') }}</span></td>
                    <td><span id="alum_grad_yr">{{ user.graduation_year || '--' }}</span></td>
                    <td>
                      <span v-if="user.membership.membershipType.name === 'Free' || 'free'">Free</span>
                      <span v-else>Paid</span>
                    </td>
                    <td>
                      <span>
                        <input v-for="role in user.roles" class="uk-input uk-form-small font-small uk-form-width-small" type="text" v-bind:value="role.name" disabled>
                      </span>
                    </td>
                  </tr>
                </tbody>
              </table>
              <div class="uk-padding-small black">
                <ul class="uk-pagination uk-flex-center uk-margin-remove">
                <li><a v-on:click="paginateLeft"><span uk-icon="icon: chevron-left; ratio: 2" class="font-white"></span></a></li>
                <li><div>
                  <select class="uk-select border-charcoal2" v-model.number="userPageNumber">
                    <option v-for="key in Array(userPageCount).keys()">{{ key + 1 }}</option>
                  </select>
                </div></li>
                <li class="font-white uk-margin-small">of {{ userPageCount }}</li>
                <li><a v-on:click="paginateRight"><span uk-icon="icon: chevron-right; ratio: 2" class="font-white"></span></a></li>
                </ul>
              </div>
            </div>
          </div>
          <div class="uk-margin-large"></div>
        </div>
      </div>
        <div class="uk-modal-footer uk-position-bottom">
          <div class="uk-grid uk-child-width-1-4" uk-grid>

            <div><a href="#modal-group-1" class="uk-button button-dk" uk-toggle>&#8249; Back</a></div>
            <div><button class="uk-button button-lt uk-modal-close" type="button">Cancel</button></div>
            <div><button class="uk-button button-lt uk-float-right" type="button" v-on:click="createNewsItemAndCloseModal"><span uk-icon="future"></span> &nbsp; Save</button></div>
            <div><a href="#modal-group-3" class="uk-button button-dk uk-float-right" uk-toggle>Next &#8250;</a></div>

          </div>
        </div>
      </div>

  <!-- STEP 1 -->
  <div id="modal-group-1" class="uk-modal-full" uk-modal>
    <div class="uk-modal-dialog">
      <button class="uk-modal-close-default" type="button" uk-close></button>

      <div class="uk-modal-header">
        <h3 class="norwester uk-margin-top uk-text-center">News Wizard </h3>
        <div class="uk-grid" uk-grid>
          <div class="uk-width-1-4"></div>

          <div class="uk-width-1-2">
            <div class="uk-grid-small" uk-grid>
              <div class="uk-width-expand" uk-leader><span class="uk-label uk-border-circle font-white gold">1</span></div>
              <div class="uk-width-expand"><span class="uk-label uk-border-circle fog font-hint">2</span></div>
              <div><span class="uk-label uk-border-circle fog font-hint">3</span></div>
            </div>
          </div>
          <div class="uk-width-1-4"></div>
        </div>
      </div>

      <div class="uk-modal-body" uk-overflow-auto>
        <h4>1: Provide Email Content</h4>
        <h5>Select a type:</h5>
        <form class="uk-form-stacked uk-margin-bottom">
          <div class="uk-form-controls">
            <label><input class="uk-radio" type="radio" name="radio1" checked v-on:click="setNewsType('Email')"> &nbsp; <strong>Simple </strong>(Text only)</label><br>
            <label><input class="uk-radio" type="radio" name="radio1" v-on:click="setNewsType('Announcement')"> &nbsp; <strong>Announcement</strong> (One image with a header and body text)</label><br>
            <label><input class="uk-radio" type="radio" name="radio1" v-on:click="setNewsType('Newsletter')"> &nbsp; <strong>Newsletter</strong> (Multiple images with text)</label><br>
          </div>
        </form>

        <!-- BASIC -->
        <form class="uk-form-stacked uk-margin-large">
          <h5>Title/Header</h5>
          <input class="uk-input border-charcoal2 uk-margin-bottom" id="form-stacked-text" type="text" v-model="newsHeader">

          <h5>Email Body</h5>
          <textarea class="uk-textarea" rows="5" placeholder="Enter the primary text of the email here" v-model="newsBody"></textarea>
        </form>

        <!-- ANNOUNCEMENT -->
        <form class="uk-form-stacked uk-margin-large uk-hidden simple" id="announcement">
          <h5>Image</h5>
          <div class="uk-width-1-1 uk-margin-bottom uk-margin-top">
            <img id="announcement-img" class="announcement-img-preview" src="http://placehold.it/600x300">
          </div>
          <div class="uk-margin" uk-margin>
            <div uk-form-custom="target: true">
              <input type="file" id="announcement-image" name="announcement-image" accept="image/*" v-on:change="onImgChange('#announcement-image', '#announcement-img')">
              <input class="uk-input uk-form-width-medium" type="text" disabled>
              <button class="uk-button uk-button-default" type="button">Upload</button>
            </div>
            
          </div>
        </form>

        <!-- Newsletter-->
        <form class="uk-form-stacked uk-margin uk-hidden announcement simple" id="news">
          <hr />
          <h6>The following are optional</h6>

          <h5>First Image</h5>
          <div class="uk-width-1-1 uk-margin-bottom uk-margin-top">
            <img id="newsletter-first-img" class="newsletter-img-preview" src="http://placehold.it/75x75">
          </div>
          <div class="uk-margin" uk-margin>
            <div uk-form-custom="target: true">
              <input type="file" id="newsletter-first-image" name="newsletter-first-image" accept="image/*" v-on:change="onImgChange('#newsletter-first-image', '#newsletter-first-img')">
              <input class="uk-input uk-form-width-medium" type="text" disabled>
              <button class="uk-button uk-button-default" type="button">Upload</button>
            </div>
          </div>
          <h5>First Title</h5>
          <input class="uk-input border-charcoal2 uk-margin-bottom" id="newsletter-first-item-title" type="text">
          <h5>First Set of Text</h5>
          <textarea id="newsletter-first-item-message" class="uk-textarea" rows="5" placeholder="Enter the primary text of the email here"></textarea>

          <hr>
          <h5>Second Image</h5>
          <div class="uk-width-1-1 uk-margin-bottom uk-margin-top">
            <img id="newsletter-second-img" class="newsletter-img-preview" src="http://placehold.it/75x75">
          </div>
          <div class="uk-margin" uk-margin>
            <div uk-form-custom="target: true">
              <input type="file" id="newsletter-second-image" name="newsletter-second-image" accept="image/*" v-on:change="onImgChange('#newsletter-second-image', '#newsletter-second-img')">
              <input class="uk-input uk-form-width-medium" type="text" disabled>
              <button class="uk-button uk-button-default" type="button">Upload</button>
            </div>
          </div>
          <h5>Second Title</h5>
          <input class="uk-input border-charcoal2 uk-margin-bottom" id="newsletter-second-item-title" type="text">
          <h5>Second Set of Text</h5>
          <textarea id="newsletter-second-item-message" class="uk-textarea" rows="5" placeholder="Enter the primary text of the email here"></textarea>

          <hr>
          <h5>Third Image</h5>
          <div class="uk-width-1-1 uk-margin-bottom uk-margin-top">
            <img id="newsletter-third-img" class="newsletter-img-preview" src="http://placehold.it/75x75">
          </div>
          <div class="uk-margin" uk-margin>
            <div uk-form-custom="target: true">
              <input type="file" id="newsletter-third-image" name="newsletter-third-image" accept="image/*" v-on:change="onImgChange('#newsletter-third-image', '#newsletter-third-img')">
              <input class="uk-input uk-form-width-medium" type="text" disabled>
              <button class="uk-button uk-button-default" type="button">Upload</button>
            </div>
          </div>
          <h5>Third Title</h5>
          <input class="uk-input border-charcoal2 uk-margin-bottom" id="newsletter-third-item-title" type="text">
          <h5>Third Set of Text</h5>
          <textarea id="newsletter-third-item-message" class="uk-textarea" rows="5" placeholder="Enter the primary text of the email here"></textarea>

          <hr>
          <h5>Fourth Image</h5>
          <div class="uk-width-1-1 uk-margin-bottom uk-margin-top">
            <img id="newsletter-fourth-img" class="newsletter-img-preview" src="http://placehold.it/75x75">
          </div>
          <div class="uk-margin" uk-margin>
            <div uk-form-custom="target: true">
              <input type="file" id="newsletter-fourth-image" name="newsletter-fourth-image" accept="image/*" v-on:change="onImgChange('#newsletter-fourth-image', '#newsletter-fourth-img')">
              <input class="uk-input uk-form-width-medium" type="text" disabled>
              <button class="uk-button uk-button-default" type="button">Upload</button>
            </div>
          </div>
          <h5>Fourth Title</h5>
          <input class="uk-input border-charcoal2 uk-margin-bottom" id="newsletter-fourth-item-title" type="text">
          <h5>Fourth Set of Text</h5>
          <textarea id="newsletter-fourth-item-message" class="uk-textarea" rows="5" placeholder="Enter the primary text of the email here"></textarea>
        </form>
      </div>

      <div class="uk-modal-footer">
        <div class="uk-grid uk-child-width-1-3" uk-grid>
          <div><button class="uk-button button-lt uk-modal-close" type="button">Cancel</button></div>
          <div><button class="uk-button button-lt uk-float-right" type="button" v-on:click="createNewsItemAndCloseModal"><span uk-icon="future"></span> &nbsp; Save</button></div>
          <div><a href="#modal-group-2" class="uk-button button-dk uk-float-right" uk-toggle>Next &#8250;</a></div>
        </div>
      </div>
    </div>
  </div>


  <!-- STEP 3 -->
  <div id="modal-group-3" class="uk-modal-full" uk-modal>
    <div class="uk-modal-dialog">
        <button class="uk-modal-close-default" type="button" uk-close></button>

        <div class="uk-modal-header">
          <h3 class="norwester uk-margin-top uk-text-center">News Wizard </h3>
          <div class="uk-grid" uk-grid>

            <div class="uk-width-1-4"></div>

            <div class="uk-width-1-2">
              <div class="uk-grid-small" uk-grid>
                <div class="uk-width-expand" uk-leader><span class="uk-label uk-border-circle font-white gold">1</span></div>
                <div class="uk-width-expand" uk-leader><span class="uk-label uk-border-circle font-white gold">2</span></div>
                <div><span class="uk-label uk-border-circle  font-white gold">3</span></div>
              </div>
            </div>
            <div class="uk-width-1-4"></div>
          </div>
        </div>

        <div class="uk-modal-body" uk-overflow-auto>
          <!-- <h4>3: Test, Send, or Schedule</h4> -->
          <h4>3: Test or Send</h4>
          <h4>Test</h4>
          <label class="profile-label">Send a test email to:</label>
          <h6 class="uk-margin-remove">Separate email addresses by commas ','</h6>
          <div class="uk-inline uk-width-1-1 uk-margin-small">
            <span class="uk-form-icon" uk-icon="icon: mail"></span>
            <input class="uk-input border-charcoal2" type="text" v-model="testEmailRecipients">
          </div>
          <label class="uk-form-label">&nbsp;</label><button class="uk-button uk-button-primary" type="button" v-on:click="sendTestEmail">TEST</button>
          <hr class="border-slate" />
          <h4>Send Immediately</h4>
          <button class="uk-button-large uk-button-danger" type="button" v-on:click="sendEmail">SEND NOW</button>
          <hr class="border-slate" />
          <!-- <h4>Schedule for Later</h4> -->

          <div class="uk-grid-small" uk-grid></div>
          <!-- <div class="uk-grid-small" uk-grid>
            <div class="uk-width-1-3">
              <h5>Date:</h5>
              <div class="uk-inline uk-width-auto">
                <span class="uk-form-icon uk-form-icon-flip" uk-icon="icon: calendar"></span>
                <input id="email-send-date" type="string" class="uk-input">
              </div>
            </div>
            <div class="uk-inline uk-width-1-3">
              <h5>Time:</h5>
              <div class="uk-inline uk-width-small">
                <span class="uk-form-icon uk-form-icon-flip" uk-icon="icon: clock"></span>
                <input id="email-send-time" type="string" class="uk-input">
              </div>
            </div>
          </div>
          <button class="uk-button-large uk-button-danger uk-margin-top" type="button" v-on:click="scheduleEmail">SCHEDULE</button> -->
        </div>
        <div class="uk-modal-footer">
          <div class="uk-grid uk-child-width-1-4" uk-grid>
            <div><a href="#modal-group-2" class="uk-button button-dk" uk-toggle>&#8249; Back</a></div>
            <div><button class="uk-button button-lt uk-modal-close" type="button">Cancel</button></div>
            <div><button class="uk-button button-lt uk-float-right" type="button" v-on:click="createNewsItemAndCloseModal"><span uk-icon="future"></span> &nbsp; Save</button></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="uk-margin-large"></div>
  <%- include('footer'); %>
  
  <script type="text/javascript">
    var app = new Vue({
      el: '#app',
      data: {
        searchDateCreatedStart: null,
        searchDateCreatedEnd: null,
        searchDateSentStart: null,
        searchDateSentEnd: null,
        searchSubject: '',
        searchType: '',
        searchStatus: '',
        news: <%- JSON.stringify(newsItems) %>,
        totalNewsCount: <%= newsItemCount %>,
        pageNumber: 1,
        pageSize: <%= defaultPageSize %>
      },
      computed: {
        pageCount: function() {
          return Math.ceil(this.totalNewsCount / this.pageSize);
        }
      },
      watch: {
        // if page size changes, display new results from beginning; change if not desired behavior
        pageSize: function(newValue, oldValue) {
          this.pageNumber === 1 ?
            this.refreshResults() :
            this.pageNumber = 1;
        },
        pageNumber: function() {
          this.refreshResults();
        }
      },
      methods: {
        refreshResults: function() {
          var self = this;
          var queryString = '';
          queryString += ('page=' + this.pageNumber);
          queryString += ('&pageSize=' + this.pageSize);
          if (this.searchDateCreatedStart) queryString += ('&createdDateStart=' + this.searchDateCreatedStart);
          if (this.searchDateCreatedEnd) queryString += ('&createdDateEnd=' + this.searchDateCreatedEnd);
          if (this.searchDateSentStart) queryString += ('&sentDateStart=' + this.searchDateSentStart);
          if (this.searchDateSentEnd) queryString += ('&sentDateEnd=' + this.searchDateSentEnd);
          if (this.searchSubject) queryString += ('&subject=' + this.searchSubject);
          if (this.searchType) queryString += ('&type=' + this.searchType);
          if (this.searchStatus) queryString += ('&status=' + this.searchStatus);
          
          axios.get('/api/news-paginated?' + queryString)
            .then(function(data) {
              if (data.data) {
                self.news = data.data['news'];
                self.totalNewsCount = data.data['count'];
              }
            })
            .catch(function(err) {
              alert('There was an issue updating your search results. Please try again');
            });
        },
        paginateLeft: function() {
          if (this.pageNumber > 1) this.pageNumber--;
        },
        paginateRight: function() {
          if (this.pageNumber < this.pageCount) this.pageNumber++;
        },
        clearFilters: function() {
          this.searchDateCreatedStart = null;
          this.searchDateCreatedEnd = null;
          this.searchDateSentStart = null;
          this.searchDateSentEnd = null;
          this.searchSubject = '';
          this.searchType = '';
          this.searchStatus = '';
        },
        applyFilters: function() {
          this.pageNumber === 1 ?
            this.refreshResults() :
            this.pageNumber = 1;
        },
        exportData: function() {
          var self = this;
          var queryString = '';
          if (this.searchDateCreatedStart) queryString += ('&createdDateStart=' + this.searchDateCreatedStart);
          if (this.searchDateCreatedEnd) queryString += ('&createdDateEnd=' + this.searchDateCreatedEnd);
          if (this.searchDateSentStart) queryString += ('&sentDateStart=' + this.searchDateSentStart);
          if (this.searchDateSentEnd) queryString += ('&sentDateEnd=' + this.searchDateSentEnd);
          if (this.searchSubject) queryString += ('&subject=' + this.searchSubject);
          if (this.searchType) queryString += ('&type=' + this.searchType);
          if (this.searchStatus) queryString += ('&status=' + this.searchStatus);

          axios.get('/api/export-news-csv?' + queryString)
            .then(function(data) {
              if (data.data) {
                var csv = data.data;
                var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            
                if (navigator.msSaveBlob) { // IE 10+
                  navigator.msSaveBlob(blob, exportedFilename);
                } else {
                  var link = document.createElement("a");
                  if (link.download !== undefined) { // feature detection
                    // Browsers that support HTML5 download attribute
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", 'news.csv');
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                  }
                }
              }
            })
            .catch(function(err) {
              alert('There was an issue exporting the current query as a csv file. Please try again');
            });
        }
      }
    });

    var eventWizard = new Vue({
      el: '#event-wizard',
      data: {
        userSearchName: '',
        userSearchGradYear: '',
        userSearchEmailAddress: '',
        userSearchPhoneNumber: '',
        userSearchMembership: '',
        userSearchRoles: '',
        userSearchAddress: '',
        userSearchCity: '',
        userSearchState: '',
        userSearchZipCode: '',
        userSearchMortalityStatus: '',
        userSearchHOFStatus: '',
        userSearchGroups: '',
        userPageNumber: 1,
        userPageSize: <%= defaultPageSize %>,
        userGroupOptions: <%- JSON.stringify(groups) %>,
        userRoleOptions: <%- JSON.stringify(roles) %>,
        users: <%- JSON.stringify(userList) %>,
        totalUserCount: <%= userCount %>,
        newsType: 'Email',
        newsHeader: '',
        newsBody: '',
        newsRecipients: [],
        testEmailRecipients: '',
        emailSendDate: null,
        emailSendTime: null
      },
      created: function() {
        var self = this;
        $(function() {
          $('#email-send-date').datepicker({
            onSelect: function(dateText, inst) {
              self.emailSendDate = dateText;
            }
          });
          $('#email-send-time').timepicker();
          $('#email-send-time').on('changeTime', function() {
            self.emailSendTime = $('#email-send-time').val();
          });
        });
      },
      computed: {
        userPageCount: function() {
          return Math.ceil(this.totalUserCount / this.userPageSize);
        }
      },
      watch: {
        userPageSize: function(newValue, oldValue) {
          this.userPageNumber === 1 ?
            this.refreshResults() :
            this.userPageNumber = 1;
        },
        userPageNumber: function() {
          this.refreshResults();
        }
      },
      methods: {
        refreshResults: function() {
          var self = this;
          var queryString = '';
          queryString += ('page=' + this.userPageNumber);
          queryString += ('&pageSize=' + this.userPageSize);
          queryString += ('&includeRelations=' + true);
          if (this.userSearchName) queryString += ('&searchName=' + this.userSearchName);
          if (this.userSearchGradYear) queryString += ('&gradYear=' + this.userSearchGradYear);
          if (this.userSearchEmailAddress) queryString += ('&emailAddress=' + this.userSearchEmailAddress);
          if (this.userSearchPhoneNumber) queryString += ('&phoneNumber=' + this.userSearchPhoneNumber);
          if (this.userSearchMembership) queryString += ('&membershipType=' + this.userSearchMembership);
          if (this.userSearchRoles) queryString += ('&roleId=' + this.userSearchRoles);
          if (this.userSearchAddress) queryString += ('&address=' + this.userSearchAddress);
          if (this.userSearchCity) queryString += ('&city=' + this.userSearchCity);
          if (this.userSearchState) queryString += ('&state=' + this.userSearchState);
          if (this.userSearchZipCode) queryString += ('&zip=' + this.userSearchZipCode);
          if (this.userSearchMortalityStatus) queryString += ('&mortality=' + this.userSearchMortalityStatus);
          if (this.userSearchHOFStatus) queryString += ('&hofStatus=' + this.userSearchHOFStatus);
          if (this.userSearchGroups) queryString += ('&groupId=' + this.userSearchGroups);
          
          axios.get('/api/users-paginated?' + queryString)
            .then(function(data) {
              if (data.data) {
                self.users = data.data['users'];
                self.totalUserCount = data.data['count'];
              }
            })
            .catch(function(err) {
              alert('There was an issue updating your search results. Please try again');
            });
        },
        paginateLeft: function() {
          if (this.userPageNumber > 1) this.userPageNumber--;
        },
        paginateRight: function() {
          if (this.userPageNumber < this.userPageCount) this.userPageNumber++;
        },
        redoSearch: function() {
          this.userPageNumber === 1 ?
            this.refreshResults() :
            this.userPageNumber = 1;
        },
        createNewsItem: function() {
          var self = this;
          return new Promise(function(resolve, reject) {
            var errMsg = '';
            if (!self.newsHeader) errMsg += 'You must enter a headline for your broadcast\n';
            if (!self.newsBody) errMsg += 'You must enter a message for your broadcast';
            if (errMsg) {
              alert(errMsg);
              reject();
            } else {
              var payload = new FormData();
              payload.append('type', self.newsType);
              payload.append('headline', self.newsHeader);
              payload.append('message', self.newsBody);

              if (self.newsType === 'Announcement') {
                payload.content = [];
                var imageInput = $('#announcement-image').get(0);
                if (imageInput.files && imageInput.files[0]) {
                  payload.append('image', imageInput.files[0]);
                }
                
              } else if (self.newsType === 'Newsletter') {
                payload.content = [];

                var firstImageInput = $('#newsletter-first-image').get(0);
                if (firstImageInput.files && firstImageInput.files[0]) {
                  payload.append('image', firstImageInput.files[0]);
                  payload.append('title', $('#newsletter-first-item-title').val());
                  payload.append('message', $('#newsletter-first-item-message').val());
                }

                var secondImageInput = $('#newsletter-second-image').get(0);
                if (secondImageInput.files && secondImageInput.files[0]) {
                  payload.append('image', secondImageInput.files[0]);
                  payload.append('title', $('#newsletter-second-item-title').val());
                  payload.append('message', $('#newsletter-second-item-message').val());
                }

                var thirdImageInput = $('#newsletter-third-image').get(0);
                if (thirdImageInput.files && thirdImageInput.files[0]) {
                  payload.append('image', thirdImageInput.files[0]);
                  payload.append('title', $('#newsletter-third-item-title').val());
                  payload.append('message', $('#newsletter-third-item-message').val());
                }

                var fourthImageInput = $('#newsletter-fourth-image').get(0);
                if (fourthImageInput.files && fourthImageInput.files[0]) {
                  payload.append('image', fourthImageInput.files[0]);
                  payload.append('title', $('#newsletter-fourth-item-title').val());
                  payload.append('message', $('#newsletter-fourth-item-message').val());
                }
              }

              if (self.newsRecipients) { payload.append('recipientList', JSON.stringify(self.newsRecipients)); }

              axios.post('/api/news-item', payload, {
                headers: {
                  'Content-Type': 'multipart/form-data'
                }
              })
              .then(function(data) {
                resolve(data);
              })
              .catch(function(err) {
                reject(err);
              });
            }
          });
        },
        createNewsItemAndCloseModal: function() {
          this.createNewsItem().then(function() {
            alert('Successfully saved news');
            UIkit.modal('#modal-group-1').hide();
            UIkit.modal('#modal-group-2').hide();
            UIkit.modal('#modal-group-3').hide();
          }).catch(function() {
            alert('There was an issue processing your request. Please try again');
          });
        },
        userClearFilters: function() {
          this.userSearchName = '';
          this.userSearchGradYear = '';
          this.userSearchEmailAddress = '';
          this.userSearchPhoneNumber = '';
          this.userSearchMembership = '';
          this.userSearchRoles = '';
          this.userSearchAddress = '';
          this.userSearchCity = '';
          this.userSearchState = '';
          this.userSearchZipCode = '';
          this.userSearchMortalityStatus = '';
          this.userSearchHOFStatus = '';
          this.userSearchGroups = '';
        },
        setNewsType: function(newsType) {
          this.newsType = newsType;
          switch (newsType) {
            case 'Email':
              $('#announcement').addClass('uk-hidden');
              $('#news').addClass('uk-hidden');
              break;
            case 'Announcement':
              $('#announcement').removeClass('uk-hidden');
              $('#news').addClass('uk-hidden');
              break;
            case 'Newsletter':
              $('#announcement').addClass('uk-hidden');
              $('#news').removeClass('uk-hidden');
              break;
            default:
              return;
          }
        },
        onImgChange: function(imageSource, target) {
          if (FileReader) {
            var el = $(imageSource).get(0);
            if (el.files && el.files[0]) {
              var fr = new FileReader();
              
              fr.onload = function(e) {
                $(target).attr('src', e.target.result);
              };
              fr.readAsDataURL(el.files[0]);

            }
          } else {
            console.log('FileReader not supported in this browser.');
          }
        },
        updateRecipientList: function(user) {
          this.newsRecipients.includes(user) ? this.newsRecipients.splice(this.newsRecipients.indexOf(user)) : this.newsRecipients.push(user);
        },
        selectAll: function() {
          this.users.forEach(function(user) {
            $('#user-' + user.id).click();
          })
        },
        sendTestEmail: function() {
          if (!this.testEmailRecipients) alert('No recipients specified');
          else {
            var self = this;
            this.createNewsItem().then(function(res) {
              axios.post('/api/send-test-email', {
                recipients: self.testEmailRecipients.split(','),
                news_item_id: res.data.id
              }).then(function(data) {
                alert('A test email was sent to the specified recipient list.');
              }).catch(function(err) {
                alert('There was an issue processing your request. Please try again');
              });
            }).catch(function() {
              alert('There was an issue processing your request. Please try again');
            });
          }
        },
        sendEmail: function() {
          this.createNewsItem().then(function(res) {
            var self = this;
            axios.post('/api/send-email', {
              news_item_id: res.data.id
            }).then(function(data) {
              alert('Your email was sent.');
              UIkit.modal('#modal-group-1').hide();
              UIkit.modal('#modal-group-2').hide();
              UIkit.modal('#modal-group-3').hide();
            }).catch(function(err) {
              alert('There was an issue processing your request. Please try again');
            });  
          }).catch(function() {
            alert('There was an issue processing your request. Please try again');
          });
        },
        scheduleEmail: function() {
          var self = this;
          var errMsg = '';
          if (!this.emailSendDate) errMsg += 'You must specify a date to schedule an email.\n';
          if (!this.emailSendTime) errMsg += 'You must specify a time to schedule an email.\n';
          if (errMsg) {
            alert(errMsg);
            return;
          }
          
          this.createNewsItem().then(function(res) {
            var tz = moment.tz.guess();
            axios.post('/api/schedule-email', {
              news_item_id: res.data.id,
              date: moment(self.emailSendDate + ' ' + self.emailSendTime, 'MM/DD/YYYY HH:mmA').tz(tz).toDate()
            }).then(function(data) {
              alert('Your email has been scheduled.');
              UIkit.modal('#modal-group-1').hide();
              UIkit.modal('#modal-group-2').hide();
              UIkit.modal('#modal-group-3').hide();
            }).catch(function(err) {
              alert('There was an issue processing your request. Please try again');
            });  
          }).catch(function() {
            alert('There was an issue processing your request. Please try again');
          });
        }
      }
    });
  </script>
  <style type="text/css">
    .announcement-img-preview {
      max-width: 600px;
      max-height: 300px;
    }

    .newsletter-img-preview {
      max-width: 75px;
      max-height: 75px;
    }
  </style>
</body>
</html>
