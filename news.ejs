<!DOCTYPE html>
<html>
<head>
  <title>News</title>
  <%- include('header'); %>
</head>
<body>
  <div id="app">
    <%- include('top-navigation'); %>      
    <div class="uk-hidden@m">
      <br><br><br><br><br><br>
    </div>

    <div class="uk-grid-small uk-padding" uk-grid>
      <div class="uk-width-1-1@s uk-width-medium@m uk-margin-bottom">
        <h4 class="norwester"><i class="fa fa-filter"></i> &nbsp;Filters</h4>
        <hr class="table-border"></hr>
        <ul class="uk-padding-small" uk-accordion="multiple: true">
          <li>
            <a class="uk-accordion-title">Date</a>
            <div class="uk-accordion-content">
              <ul uk-accordion class="uk-margin-left">
                <li v-for="year in Object.keys(filters)">
                  <a class="uk-accordion-title font-black" href="#">&nbsp;{{ year }}</a>
                  <div class="uk-accordion-content uk-margin-left">
                    <label class="font-charcoal" v-for="month in Object.keys(filters[year])"><input class="uk-checkbox" type="checkbox" v-model="filters[year][month]"> &nbsp;{{ month }}</label><br>
                  </div>
                </li>
              </ul>
            </div>
          </li>
          <li>
            <a class="uk-accordion-title" href="#">Type</a>
            <div class="uk-accordion-content uk-margin-left">
              <label class="font-charcoal"><input class="uk-checkbox" type="checkbox" v-model="showNewsletters"> &nbsp;Newsletter</label><br>
              <label class="font-charcoal"><input class="uk-checkbox" type="checkbox" v-model="showAnnouncements"> &nbsp;Announcement</label><br>
            </div>
          </li>
        </ul>
      </div>

      <div  class="uk-width-expand">
        <h4 class="norwester"><i class="fa fa-newspaper-o"></i> &nbsp;News</h4>
        <hr class="table-border"></hr>

        <div class="uk-child-width-1-2@m uk-margin uk-grid uk-grid-match" uk-grid>
          <div v-if="filteredNewsItems.length == 0">
            <i>There are currently no news items to display.</i>
          </div>
          <div v-for="item in filteredNewsItems">
            <div class="uk-card uk-card-default">
              <div class="uk-card-body">
                <h4 class="uk-card-title" id="news_title">{{ item.headline }}</h4>
                <p class="uk-text-meta uk-margin-remove-top">{{ item.publish_date }}</p>
                <p id="announcement_details" v-if="item.item_type == 'Announcement' ">{{ item.content }}</p>
              </div>

              <div class="uk-card-media-bottom uk-height-medium uk-cover-container" v-if="item.item_type == 'Newsletter' ">
                  <img v-bind:src="'/api/photo/' + item.image_ref" uk-cover>
              </div>
              <div class="uk-clearfix uk-position-bottom white2">
                <h6 class="uk-padding-small font-charcoal">
                    <span class="uk-position-relative uk-float-left uk-inline">{{ item.item_type }}</span>
                  <span class="uk-position-relative uk-float-right uk-inline"><i class="fa fa-eye"></i> &nbsp;{{ item.view_count }}</span>
                </h6>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="uk-margin-large"></div>
  <%- include('footer'); %>
  <script type="text/javascript">
    var app = new Vue({
      el: '#app',
      data: {
        newsItems: <%- JSON.stringify(newsItems) %>,
        filteredNewsItems: <%- JSON.stringify(newsItems) %>,
        filters: {},
        showAnnouncements: true,
        showNewsletters: true
      },
      created: function() {
        var tempFilters = {};
        this.filteredNewsItems.forEach(function(item) {
          var year = moment(item.publish_date).format('YYYY');
          var month = moment(item.publish_date).format('MMM');
          if (!tempFilters[year]) tempFilters[year] = {};
          tempFilters[year][month] = true;
        });
        this.filters = tempFilters;
      },
      watch: {
        filters: {
          handler: function() {
            this.reFilter(); 
          },
          deep: true
        },
        showAnnouncements: function() {
          this.reFilter();
        },
        showNewsletters: function() {
          this.reFilter();
        }
      },
      methods: {
        reFilter: function() {
          var self = this;
          this.filteredNewsItems = this.newsItems
          .filter(function(item) {
            return (self.filters[moment(item.publish_date).format('YYYY')][moment(item.publish_date).format('MMM')]);
          })
          .filter(function(item) {
            return self.showAnnouncements ? true: item.item_type != 'Announcement';
          })
          .filter(function(item) {
            return self.showNewsletters ? true : item.item_type != 'Newsletter';
          });
        }
      }
    });
  </script>
</body>
</html>
